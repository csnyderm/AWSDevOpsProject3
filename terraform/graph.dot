digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.cloudfront.aws_cloudfront_cache_policy.cache_policy (expand)" [label = "module.cloudfront.aws_cloudfront_cache_policy.cache_policy", shape = "box"]
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" [label = "module.cloudfront.aws_cloudfront_distribution.cdn", shape = "box"]
		"[root] module.cloudfront.aws_cloudfront_origin_access_identity.origin_access_identity (expand)" [label = "module.cloudfront.aws_cloudfront_origin_access_identity.origin_access_identity", shape = "box"]
		"[root] module.cloudfront.aws_cloudfront_origin_request_policy.origin_request_policy (expand)" [label = "module.cloudfront.aws_cloudfront_origin_request_policy.origin_request_policy", shape = "box"]
		"[root] module.cloudfront.aws_cloudfront_response_headers_policy.response_headers_policy (expand)" [label = "module.cloudfront.aws_cloudfront_response_headers_policy.response_headers_policy", shape = "box"]
		"[root] module.cloudfront.aws_route53_record.hosted_zone_id (expand)" [label = "module.cloudfront.aws_route53_record.hosted_zone_id", shape = "box"]
		"[root] module.cloudfront.data.aws_route53_zone.hosted_zone (expand)" [label = "module.cloudfront.data.aws_route53_zone.hosted_zone", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" [label = "module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_4xx_error_rate_cloudfront (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.high_4xx_error_rate_cloudfront", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_5xx_error_rate_cloudfront (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.high_5xx_error_rate_cloudfront", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_cpu_utilization (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.high_cpu_utilization", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_database_connections_docdb (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.high_database_connections_docdb", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_error_rate_5xx (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.high_error_rate_5xx", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_memory_utilization (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.high_memory_utilization", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_sign_in_failures_cognito (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.high_sign_in_failures_cognito", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.low_freeable_memory_docdb (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.low_freeable_memory_docdb", shape = "box"]
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.s3_bucket_size (expand)" [label = "module.cloudwatch.aws_cloudwatch_metric_alarm.s3_bucket_size", shape = "box"]
		"[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)" [label = "module.cloudwatch.aws_sns_topic.cuttlefish-topic", shape = "box"]
		"[root] module.cloudwatch.aws_sns_topic_subscription.team_subscription (expand)" [label = "module.cloudwatch.aws_sns_topic_subscription.team_subscription", shape = "box"]
		"[root] module.cloudwatch.data.aws_cloudfront_distribution.distribution (expand)" [label = "module.cloudwatch.data.aws_cloudfront_distribution.distribution", shape = "box"]
		"[root] module.cloudwatch.data.aws_cognito_user_pools.user_pool (expand)" [label = "module.cloudwatch.data.aws_cognito_user_pools.user_pool", shape = "box"]
		"[root] module.cloudwatch.data.aws_eks_cluster.cluster (expand)" [label = "module.cloudwatch.data.aws_eks_cluster.cluster", shape = "box"]
		"[root] module.cloudwatch.data.aws_instance.ec2_instance (expand)" [label = "module.cloudwatch.data.aws_instance.ec2_instance", shape = "box"]
		"[root] module.cloudwatch.data.aws_lb.alb (expand)" [label = "module.cloudwatch.data.aws_lb.alb", shape = "box"]
		"[root] module.cloudwatch.data.aws_s3_bucket.s3_bucket (expand)" [label = "module.cloudwatch.data.aws_s3_bucket.s3_bucket", shape = "box"]
		"[root] module.codebuild.aws_codebuild_project.project (expand)" [label = "module.codebuild.aws_codebuild_project.project", shape = "box"]
		"[root] module.codecommit.aws_codecommit_repository.repo (expand)" [label = "module.codecommit.aws_codecommit_repository.repo", shape = "box"]
		"[root] module.codepipeline.aws_codepipeline.pipeline (expand)" [label = "module.codepipeline.aws_codepipeline.pipeline", shape = "box"]
		"[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)" [label = "module.documentdb.aws_docdb_cluster.cuttlefish_db", shape = "box"]
		"[root] module.documentdb.aws_docdb_cluster_instance.cuttlefish_instance (expand)" [label = "module.documentdb.aws_docdb_cluster_instance.cuttlefish_instance", shape = "box"]
		"[root] module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg (expand)" [label = "module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg", shape = "box"]
		"[root] module.documentdb.aws_docdb_subnet_group.cuttlefish_subnetgrp (expand)" [label = "module.documentdb.aws_docdb_subnet_group.cuttlefish_subnetgrp", shape = "box"]
		"[root] module.documentdb.aws_security_group.documentdb_sg (expand)" [label = "module.documentdb.aws_security_group.documentdb_sg", shape = "box"]
		"[root] module.documentdb.aws_security_group_rule.eks_ingress (expand)" [label = "module.documentdb.aws_security_group_rule.eks_ingress", shape = "box"]
		"[root] module.ecr.aws_ecrpublic_repository.repositories (expand)" [label = "module.ecr.aws_ecrpublic_repository.repositories", shape = "box"]
		"[root] module.ecr.aws_ecrpublic_repository_policy.policies (expand)" [label = "module.ecr.aws_ecrpublic_repository_policy.policies", shape = "box"]
		"[root] module.eks_module.aws_eks_access_entry.codebuild_access (expand)" [label = "module.eks_module.aws_eks_access_entry.codebuild_access", shape = "box"]
		"[root] module.eks_module.aws_eks_access_entry.eks_access (expand)" [label = "module.eks_module.aws_eks_access_entry.eks_access", shape = "box"]
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_admin_access (expand)" [label = "module.eks_module.aws_eks_access_policy_association.codebuild_admin_access", shape = "box"]
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_cluster_association (expand)" [label = "module.eks_module.aws_eks_access_policy_association.codebuild_cluster_association", shape = "box"]
		"[root] module.eks_module.aws_eks_access_policy_association.eks_admin_association (expand)" [label = "module.eks_module.aws_eks_access_policy_association.eks_admin_association", shape = "box"]
		"[root] module.eks_module.aws_eks_access_policy_association.eks_cluster_association (expand)" [label = "module.eks_module.aws_eks_access_policy_association.eks_cluster_association", shape = "box"]
		"[root] module.eks_module.aws_eks_addon.cni_addon (expand)" [label = "module.eks_module.aws_eks_addon.cni_addon", shape = "box"]
		"[root] module.eks_module.aws_eks_addon.coredns_addon (expand)" [label = "module.eks_module.aws_eks_addon.coredns_addon", shape = "box"]
		"[root] module.eks_module.aws_eks_addon.kubeproxy_addon (expand)" [label = "module.eks_module.aws_eks_addon.kubeproxy_addon", shape = "box"]
		"[root] module.eks_module.aws_eks_addon.observability_addon (expand)" [label = "module.eks_module.aws_eks_addon.observability_addon", shape = "box"]
		"[root] module.eks_module.aws_eks_addon.podidentity_addon (expand)" [label = "module.eks_module.aws_eks_addon.podidentity_addon", shape = "box"]
		"[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)" [label = "module.eks_module.aws_eks_cluster.project3-cluster", shape = "box"]
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" [label = "module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup", shape = "box"]
		"[root] module.eks_module.null_resource.private_tagging_additions (expand)" [label = "module.eks_module.null_resource.private_tagging_additions", shape = "box"]
		"[root] module.eks_module.null_resource.public_tagging_additions (expand)" [label = "module.eks_module.null_resource.public_tagging_additions", shape = "box"]
		"[root] module.eks_module.null_resource.setup_alb (expand)" [label = "module.eks_module.null_resource.setup_alb", shape = "box"]
		"[root] module.iam.aws_iam_policy.alb_policy (expand)" [label = "module.iam.aws_iam_policy.alb_policy", shape = "box"]
		"[root] module.iam.aws_iam_policy.codebuild_policy (expand)" [label = "module.iam.aws_iam_policy.codebuild_policy", shape = "box"]
		"[root] module.iam.aws_iam_policy.codepipeline_policy (expand)" [label = "module.iam.aws_iam_policy.codepipeline_policy", shape = "box"]
		"[root] module.iam.aws_iam_policy.cognito_policy (expand)" [label = "module.iam.aws_iam_policy.cognito_policy", shape = "box"]
		"[root] module.iam.aws_iam_policy.eks_cluster_policy (expand)" [label = "module.iam.aws_iam_policy.eks_cluster_policy", shape = "box"]
		"[root] module.iam.aws_iam_policy.route53_policy (expand)" [label = "module.iam.aws_iam_policy.route53_policy", shape = "box"]
		"[root] module.iam.aws_iam_policy.s3_policy (expand)" [label = "module.iam.aws_iam_policy.s3_policy", shape = "box"]
		"[root] module.iam.aws_iam_policy.team_cuttlefish_ecr_policy (expand)" [label = "module.iam.aws_iam_policy.team_cuttlefish_ecr_policy", shape = "box"]
		"[root] module.iam.aws_iam_role.codebuild_role (expand)" [label = "module.iam.aws_iam_role.codebuild_role", shape = "box"]
		"[root] module.iam.aws_iam_role.codepipeline_role (expand)" [label = "module.iam.aws_iam_role.codepipeline_role", shape = "box"]
		"[root] module.iam.aws_iam_role.cognito_role (expand)" [label = "module.iam.aws_iam_role.cognito_role", shape = "box"]
		"[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)" [label = "module.iam.aws_iam_role.eks_nodegroup_role", shape = "box"]
		"[root] module.iam.aws_iam_role.eks_role (expand)" [label = "module.iam.aws_iam_role.eks_role", shape = "box"]
		"[root] module.iam.aws_iam_role.route53_role (expand)" [label = "module.iam.aws_iam_role.route53_role", shape = "box"]
		"[root] module.iam.aws_iam_role.s3_role (expand)" [label = "module.iam.aws_iam_role.s3_role", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.cloudwatch_agent_server_policy (expand)" [label = "module.iam.aws_iam_role_policy_attachment.cloudwatch_agent_server_policy", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.codebuild_policy_attach (expand)" [label = "module.iam.aws_iam_role_policy_attachment.codebuild_policy_attach", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.codepipeline_policy_attach (expand)" [label = "module.iam.aws_iam_role_policy_attachment.codepipeline_policy_attach", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.cognito_policy_attach (expand)" [label = "module.iam.aws_iam_role_policy_attachment.cognito_policy_attach", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.ec2_container_registry_read_only (expand)" [label = "module.iam.aws_iam_role_policy_attachment.ec2_container_registry_read_only", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.eks_cluster_attachment (expand)" [label = "module.iam.aws_iam_role_policy_attachment.eks_cluster_attachment", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.eks_cni_policy (expand)" [label = "module.iam.aws_iam_role_policy_attachment.eks_cni_policy", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.eks_worker_node_policy (expand)" [label = "module.iam.aws_iam_role_policy_attachment.eks_worker_node_policy", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.route53_policy_attach (expand)" [label = "module.iam.aws_iam_role_policy_attachment.route53_policy_attach", shape = "box"]
		"[root] module.iam.aws_iam_role_policy_attachment.s3_policy_attach (expand)" [label = "module.iam.aws_iam_role_policy_attachment.s3_policy_attach", shape = "box"]
		"[root] module.iam.aws_iam_user.codecommit_user (expand)" [label = "module.iam.aws_iam_user.codecommit_user", shape = "box"]
		"[root] module.iam.aws_iam_user_policy.codecommit_policy (expand)" [label = "module.iam.aws_iam_user_policy.codecommit_policy", shape = "box"]
		"[root] module.iam.aws_iam_user_ssh_key.codecommit_ssh_key (expand)" [label = "module.iam.aws_iam_user_ssh_key.codecommit_ssh_key", shape = "box"]
		"[root] module.s3_static_website.aws_s3_bucket.static_site (expand)" [label = "module.s3_static_website.aws_s3_bucket.static_site", shape = "box"]
		"[root] module.s3_static_website.aws_s3_bucket_policy.static_site_policy (expand)" [label = "module.s3_static_website.aws_s3_bucket_policy.static_site_policy", shape = "box"]
		"[root] module.s3_static_website.data.aws_prefix_list.cloudfront_origin_facing (expand)" [label = "module.s3_static_website.data.aws_prefix_list.cloudfront_origin_facing", shape = "box"]
		"[root] module.vpc_module.aws_eip.nat_gateway_eip (expand)" [label = "module.vpc_module.aws_eip.nat_gateway_eip", shape = "box"]
		"[root] module.vpc_module.aws_internet_gateway.team-cuttlefish_igw (expand)" [label = "module.vpc_module.aws_internet_gateway.team-cuttlefish_igw", shape = "box"]
		"[root] module.vpc_module.aws_nat_gateway.team-cuttle_nat (expand)" [label = "module.vpc_module.aws_nat_gateway.team-cuttle_nat", shape = "box"]
		"[root] module.vpc_module.aws_route_table.private_route_table (expand)" [label = "module.vpc_module.aws_route_table.private_route_table", shape = "box"]
		"[root] module.vpc_module.aws_route_table.public_route_table (expand)" [label = "module.vpc_module.aws_route_table.public_route_table", shape = "box"]
		"[root] module.vpc_module.aws_route_table_association.private1_association (expand)" [label = "module.vpc_module.aws_route_table_association.private1_association", shape = "box"]
		"[root] module.vpc_module.aws_route_table_association.private2_association (expand)" [label = "module.vpc_module.aws_route_table_association.private2_association", shape = "box"]
		"[root] module.vpc_module.aws_route_table_association.private3_association (expand)" [label = "module.vpc_module.aws_route_table_association.private3_association", shape = "box"]
		"[root] module.vpc_module.aws_route_table_association.public1_association (expand)" [label = "module.vpc_module.aws_route_table_association.public1_association", shape = "box"]
		"[root] module.vpc_module.aws_route_table_association.public2_association (expand)" [label = "module.vpc_module.aws_route_table_association.public2_association", shape = "box"]
		"[root] module.vpc_module.aws_subnet.private_subnets (expand)" [label = "module.vpc_module.aws_subnet.private_subnets", shape = "box"]
		"[root] module.vpc_module.aws_subnet.public_subnets (expand)" [label = "module.vpc_module.aws_subnet.public_subnets", shape = "box"]
		"[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)" [label = "module.vpc_module.aws_vpc.team-cuttlefish_vpc", shape = "box"]
		"[root] module.vpc_module.data.aws_availability_zones.available (expand)" [label = "module.vpc_module.data.aws_availability_zones.available", shape = "box"]
		"[root] module.vpc_module.data.aws_region.current (expand)" [label = "module.vpc_module.data.aws_region.current", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/null\"]" [label = "provider[\"registry.terraform.io/hashicorp/null\"]", shape = "diamond"]
		"[root] var.acm_certificate" [label = "var.acm_certificate", shape = "note"]
		"[root] var.alb_name" [label = "var.alb_name", shape = "note"]
		"[root] var.artifact_bucket" [label = "var.artifact_bucket", shape = "note"]
		"[root] var.cloudfront_aliases" [label = "var.cloudfront_aliases", shape = "note"]
		"[root] var.ddb_cluster_name" [label = "var.ddb_cluster_name", shape = "note"]
		"[root] var.project_names" [label = "var.project_names", shape = "note"]
		"[root] var.region" [label = "var.region", shape = "note"]
		"[root] var.s3_bucket_name" [label = "var.s3_bucket_name", shape = "note"]
		"[root] var.team" [label = "var.team", shape = "note"]
		"[root] module.cloudfront (close)" -> "[root] module.cloudfront.aws_route53_record.hosted_zone_id (expand)"
		"[root] module.cloudfront (close)" -> "[root] module.cloudfront.output.cache_policy_id (expand)"
		"[root] module.cloudfront (close)" -> "[root] module.cloudfront.output.cloudfront_domain_name (expand)"
		"[root] module.cloudfront (close)" -> "[root] module.cloudfront.output.distribution_id (expand)"
		"[root] module.cloudfront (close)" -> "[root] module.cloudfront.output.origin_access_identity_arn (expand)"
		"[root] module.cloudfront (close)" -> "[root] module.cloudfront.output.origin_request_policy_id (expand)"
		"[root] module.cloudfront (close)" -> "[root] module.cloudfront.output.response_headers_policy_id (expand)"
		"[root] module.cloudfront.aws_cloudfront_cache_policy.cache_policy (expand)" -> "[root] module.cloudfront.var.cache_policy_name (expand)"
		"[root] module.cloudfront.aws_cloudfront_cache_policy.cache_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.aws_cloudfront_cache_policy.cache_policy (expand)"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.aws_cloudfront_origin_access_identity.origin_access_identity (expand)"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.aws_cloudfront_origin_request_policy.origin_request_policy (expand)"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.aws_cloudfront_response_headers_policy.response_headers_policy (expand)"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.var.acm_certificate_arn (expand)"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.var.aliases (expand)"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.var.origin_bucket (expand)"
		"[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)" -> "[root] module.cloudfront.var.tags (expand)"
		"[root] module.cloudfront.aws_cloudfront_origin_access_identity.origin_access_identity (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.aws_cloudfront_origin_access_identity.origin_access_identity (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.cloudfront.aws_cloudfront_origin_request_policy.origin_request_policy (expand)" -> "[root] module.cloudfront.var.origin_request_policy_name (expand)"
		"[root] module.cloudfront.aws_cloudfront_origin_request_policy.origin_request_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.cloudfront.aws_cloudfront_response_headers_policy.response_headers_policy (expand)" -> "[root] module.cloudfront.var.response_headers_policy_name (expand)"
		"[root] module.cloudfront.aws_cloudfront_response_headers_policy.response_headers_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.cloudfront.aws_route53_record.hosted_zone_id (expand)" -> "[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)"
		"[root] module.cloudfront.aws_route53_record.hosted_zone_id (expand)" -> "[root] module.cloudfront.data.aws_route53_zone.hosted_zone (expand)"
		"[root] module.cloudfront.aws_route53_record.hosted_zone_id (expand)" -> "[root] module.cloudfront.var.hosted_zone_id (expand)"
		"[root] module.cloudfront.aws_route53_record.hosted_zone_id (expand)" -> "[root] module.cloudfront.var.record_name (expand)"
		"[root] module.cloudfront.data.aws_route53_zone.hosted_zone (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.data.aws_route53_zone.hosted_zone (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.cloudfront.output.cache_policy_id (expand)" -> "[root] module.cloudfront.aws_cloudfront_cache_policy.cache_policy (expand)"
		"[root] module.cloudfront.output.cloudfront_domain_name (expand)" -> "[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)"
		"[root] module.cloudfront.output.distribution_id (expand)" -> "[root] module.cloudfront.aws_cloudfront_distribution.cdn (expand)"
		"[root] module.cloudfront.output.origin_access_identity_arn (expand)" -> "[root] module.cloudfront.aws_cloudfront_origin_access_identity.origin_access_identity (expand)"
		"[root] module.cloudfront.output.origin_request_policy_id (expand)" -> "[root] module.cloudfront.aws_cloudfront_origin_request_policy.origin_request_policy (expand)"
		"[root] module.cloudfront.output.response_headers_policy_id (expand)" -> "[root] module.cloudfront.aws_cloudfront_response_headers_policy.response_headers_policy (expand)"
		"[root] module.cloudfront.var.acm_certificate_arn (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.acm_certificate_arn (expand)" -> "[root] var.acm_certificate"
		"[root] module.cloudfront.var.aliases (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.aliases (expand)" -> "[root] var.cloudfront_aliases"
		"[root] module.cloudfront.var.cache_policy_name (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.hosted_zone_id (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.origin_bucket (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.origin_bucket (expand)" -> "[root] module.s3_static_website.output.bucket_name (expand)"
		"[root] module.cloudfront.var.origin_request_policy_name (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.record_name (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.response_headers_policy_name (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudfront.var.tags (expand)" -> "[root] module.cloudfront (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_4xx_error_rate_cloudfront (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_5xx_error_rate_cloudfront (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_cpu_utilization (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_database_connections_docdb (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_error_rate_5xx (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_memory_utilization (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_sign_in_failures_cognito (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.low_freeable_memory_docdb (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.s3_bucket_size (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.aws_sns_topic_subscription.team_subscription (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.output.dashboard_arn (expand)"
		"[root] module.cloudwatch (close)" -> "[root] module.cloudwatch.var.team (expand)"
		"[root] module.cloudwatch (expand)" -> "[root] module.codepipeline (close)"
		"[root] module.cloudwatch (expand)" -> "[root] module.documentdb (close)"
		"[root] module.cloudwatch (expand)" -> "[root] module.eks_module (close)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.data.aws_cloudfront_distribution.distribution (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.data.aws_cognito_user_pools.user_pool (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.data.aws_eks_cluster.cluster (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.data.aws_instance.ec2_instance (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.data.aws_lb.alb (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.data.aws_s3_bucket.s3_bucket (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.var.aws_region (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.var.dashboard_name (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)" -> "[root] module.cloudwatch.var.ddb_cluster_id (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_4xx_error_rate_cloudfront (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_4xx_error_rate_cloudfront (expand)" -> "[root] module.cloudwatch.data.aws_cloudfront_distribution.distribution (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_5xx_error_rate_cloudfront (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_5xx_error_rate_cloudfront (expand)" -> "[root] module.cloudwatch.data.aws_cloudfront_distribution.distribution (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_cpu_utilization (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_cpu_utilization (expand)" -> "[root] module.cloudwatch.data.aws_instance.ec2_instance (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_database_connections_docdb (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_database_connections_docdb (expand)" -> "[root] module.cloudwatch.var.ddb_cluster_id (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_error_rate_5xx (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_error_rate_5xx (expand)" -> "[root] module.cloudwatch.data.aws_lb.alb (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_memory_utilization (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_memory_utilization (expand)" -> "[root] module.cloudwatch.data.aws_eks_cluster.cluster (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_sign_in_failures_cognito (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_sign_in_failures_cognito (expand)" -> "[root] module.cloudwatch.data.aws_cognito_user_pools.user_pool (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.low_freeable_memory_docdb (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.low_freeable_memory_docdb (expand)" -> "[root] module.cloudwatch.var.ddb_cluster_id (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.s3_bucket_size (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_cloudwatch_metric_alarm.s3_bucket_size (expand)" -> "[root] module.cloudwatch.data.aws_s3_bucket.s3_bucket (expand)"
		"[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)" -> "[root] module.cloudwatch.var.sns_topic_name (expand)"
		"[root] module.cloudwatch.aws_sns_topic_subscription.team_subscription (expand)" -> "[root] module.cloudwatch.aws_sns_topic.cuttlefish-topic (expand)"
		"[root] module.cloudwatch.aws_sns_topic_subscription.team_subscription (expand)" -> "[root] module.cloudwatch.var.team_email (expand)"
		"[root] module.cloudwatch.data.aws_cloudfront_distribution.distribution (expand)" -> "[root] module.cloudwatch.var.cloudfront_id (expand)"
		"[root] module.cloudwatch.data.aws_cognito_user_pools.user_pool (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.data.aws_eks_cluster.cluster (expand)" -> "[root] module.cloudwatch.var.eks_cluster_name (expand)"
		"[root] module.cloudwatch.data.aws_instance.ec2_instance (expand)" -> "[root] module.cloudwatch.var.ec2_instance_tag (expand)"
		"[root] module.cloudwatch.data.aws_lb.alb (expand)" -> "[root] module.cloudwatch.var.alb_name (expand)"
		"[root] module.cloudwatch.data.aws_s3_bucket.s3_bucket (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.output.dashboard_arn (expand)" -> "[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)"
		"[root] module.cloudwatch.var.alb_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.alb_name (expand)" -> "[root] var.alb_name"
		"[root] module.cloudwatch.var.aws_region (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.cloudfront_id (expand)" -> "[root] module.cloudfront.output.distribution_id (expand)"
		"[root] module.cloudwatch.var.cloudfront_id (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.dashboard_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.ddb_cluster_id (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.ec2_instance_tag (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.eks_cluster_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.sns_topic_name (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.team (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.cloudwatch.var.team_email (expand)" -> "[root] module.cloudwatch (expand)"
		"[root] module.codebuild (close)" -> "[root] module.codebuild.output.project_names (expand)"
		"[root] module.codebuild (expand)" -> "[root] module.ecr (close)"
		"[root] module.codebuild.aws_codebuild_project.project (expand)" -> "[root] module.codebuild.var.ddb_cluster_name (expand)"
		"[root] module.codebuild.aws_codebuild_project.project (expand)" -> "[root] module.codebuild.var.ddb_pass (expand)"
		"[root] module.codebuild.aws_codebuild_project.project (expand)" -> "[root] module.codebuild.var.eks_cluster_name (expand)"
		"[root] module.codebuild.aws_codebuild_project.project (expand)" -> "[root] module.codebuild.var.project_names (expand)"
		"[root] module.codebuild.aws_codebuild_project.project (expand)" -> "[root] module.codebuild.var.region (expand)"
		"[root] module.codebuild.aws_codebuild_project.project (expand)" -> "[root] module.codebuild.var.service_role (expand)"
		"[root] module.codebuild.output.project_names (expand)" -> "[root] module.codebuild.aws_codebuild_project.project (expand)"
		"[root] module.codebuild.var.ddb_cluster_name (expand)" -> "[root] module.codebuild (expand)"
		"[root] module.codebuild.var.ddb_cluster_name (expand)" -> "[root] var.ddb_cluster_name"
		"[root] module.codebuild.var.ddb_pass (expand)" -> "[root] module.codebuild (expand)"
		"[root] module.codebuild.var.ddb_pass (expand)" -> "[root] module.documentdb.output.master_pass (expand)"
		"[root] module.codebuild.var.eks_cluster_name (expand)" -> "[root] module.codebuild (expand)"
		"[root] module.codebuild.var.eks_cluster_name (expand)" -> "[root] module.eks_module.output.cluster_name (expand)"
		"[root] module.codebuild.var.project_names (expand)" -> "[root] module.codebuild (expand)"
		"[root] module.codebuild.var.region (expand)" -> "[root] module.codebuild (expand)"
		"[root] module.codebuild.var.region (expand)" -> "[root] var.region"
		"[root] module.codebuild.var.service_role (expand)" -> "[root] module.codebuild (expand)"
		"[root] module.codebuild.var.service_role (expand)" -> "[root] module.iam.output.codebuild_role_arn (expand)"
		"[root] module.codecommit (close)" -> "[root] module.codecommit.output.repo_arns (expand)"
		"[root] module.codecommit.aws_codecommit_repository.repo (expand)" -> "[root] module.codecommit.var.repo_names (expand)"
		"[root] module.codecommit.aws_codecommit_repository.repo (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.codecommit.output.repo_arns (expand)" -> "[root] module.codecommit.aws_codecommit_repository.repo (expand)"
		"[root] module.codecommit.var.repo_names (expand)" -> "[root] module.codecommit (expand)"
		"[root] module.codecommit.var.repo_names (expand)" -> "[root] var.project_names"
		"[root] module.codepipeline (close)" -> "[root] module.codepipeline.output.pipeline_names (expand)"
		"[root] module.codepipeline (expand)" -> "[root] module.codebuild (close)"
		"[root] module.codepipeline (expand)" -> "[root] module.iam (close)"
		"[root] module.codepipeline.aws_codepipeline.pipeline (expand)" -> "[root] module.codepipeline.var.artifact_bucket (expand)"
		"[root] module.codepipeline.aws_codepipeline.pipeline (expand)" -> "[root] module.codepipeline.var.pipeline_names (expand)"
		"[root] module.codepipeline.aws_codepipeline.pipeline (expand)" -> "[root] module.codepipeline.var.role_arn (expand)"
		"[root] module.codepipeline.output.pipeline_names (expand)" -> "[root] module.codepipeline.aws_codepipeline.pipeline (expand)"
		"[root] module.codepipeline.var.artifact_bucket (expand)" -> "[root] module.codepipeline (expand)"
		"[root] module.codepipeline.var.artifact_bucket (expand)" -> "[root] var.artifact_bucket"
		"[root] module.codepipeline.var.pipeline_names (expand)" -> "[root] module.codepipeline (expand)"
		"[root] module.codepipeline.var.role_arn (expand)" -> "[root] module.codepipeline (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.aws_security_group_rule.eks_ingress (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.arn (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.cluster_name (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.endpoint (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.id (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.instance_identifier (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.master_pass (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.master_username (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.reader_endpoint (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.security_group_arn (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.security_group_id (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.output.security_group_name (expand)"
		"[root] module.documentdb (close)" -> "[root] module.documentdb.var.backup_retention_period (expand)"
		"[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)" -> "[root] module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg (expand)"
		"[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)" -> "[root] module.documentdb.aws_docdb_subnet_group.cuttlefish_subnetgrp (expand)"
		"[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)" -> "[root] module.documentdb.aws_security_group.documentdb_sg (expand)"
		"[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)" -> "[root] module.documentdb.var.engine (expand)"
		"[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)" -> "[root] module.documentdb.var.master_password (expand)"
		"[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)" -> "[root] module.documentdb.var.master_username (expand)"
		"[root] module.documentdb.aws_docdb_cluster_instance.cuttlefish_instance (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.aws_docdb_cluster_instance.cuttlefish_instance (expand)" -> "[root] module.documentdb.var.instance_class (expand)"
		"[root] module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg (expand)" -> "[root] module.documentdb.var.cluster_family (expand)"
		"[root] module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg (expand)" -> "[root] module.documentdb.var.cluster_name (expand)"
		"[root] module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg (expand)" -> "[root] module.documentdb.var.tags (expand)"
		"[root] module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg (expand)" -> "[root] module.documentdb.var.tls_enabled (expand)"
		"[root] module.documentdb.aws_docdb_cluster_parameter_group.cuttlefish_pg (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.documentdb.aws_docdb_subnet_group.cuttlefish_subnetgrp (expand)" -> "[root] module.documentdb.var.cluster_name (expand)"
		"[root] module.documentdb.aws_docdb_subnet_group.cuttlefish_subnetgrp (expand)" -> "[root] module.documentdb.var.subnet_ids (expand)"
		"[root] module.documentdb.aws_docdb_subnet_group.cuttlefish_subnetgrp (expand)" -> "[root] module.documentdb.var.tags (expand)"
		"[root] module.documentdb.aws_security_group.documentdb_sg (expand)" -> "[root] module.documentdb.var.documentdb_sg_name (expand)"
		"[root] module.documentdb.aws_security_group.documentdb_sg (expand)" -> "[root] module.documentdb.var.ingress_sg (expand)"
		"[root] module.documentdb.aws_security_group.documentdb_sg (expand)" -> "[root] module.documentdb.var.team (expand)"
		"[root] module.documentdb.aws_security_group.documentdb_sg (expand)" -> "[root] module.documentdb.var.vpc_id (expand)"
		"[root] module.documentdb.aws_security_group_rule.eks_ingress (expand)" -> "[root] module.documentdb.aws_security_group.documentdb_sg (expand)"
		"[root] module.documentdb.output.arn (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.output.cluster_name (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.output.endpoint (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.output.id (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.output.instance_identifier (expand)" -> "[root] module.documentdb.aws_docdb_cluster_instance.cuttlefish_instance (expand)"
		"[root] module.documentdb.output.master_pass (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.output.master_username (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.output.reader_endpoint (expand)" -> "[root] module.documentdb.aws_docdb_cluster.cuttlefish_db (expand)"
		"[root] module.documentdb.output.security_group_arn (expand)" -> "[root] module.documentdb.aws_security_group.documentdb_sg (expand)"
		"[root] module.documentdb.output.security_group_id (expand)" -> "[root] module.documentdb.aws_security_group.documentdb_sg (expand)"
		"[root] module.documentdb.output.security_group_name (expand)" -> "[root] module.documentdb.aws_security_group.documentdb_sg (expand)"
		"[root] module.documentdb.var.backup_retention_period (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.cluster_family (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.cluster_name (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.cluster_name (expand)" -> "[root] var.ddb_cluster_name"
		"[root] module.documentdb.var.documentdb_sg_name (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.engine (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.ingress_sg (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.ingress_sg (expand)" -> "[root] module.eks_module.output.cluster_sg (expand)"
		"[root] module.documentdb.var.instance_class (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.master_password (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.master_username (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.subnet_ids (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.subnet_ids (expand)" -> "[root] module.vpc_module.output.private_subnet_ids (expand)"
		"[root] module.documentdb.var.tags (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.tags (expand)" -> "[root] var.team"
		"[root] module.documentdb.var.team (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.tls_enabled (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.vpc_id (expand)" -> "[root] module.documentdb (expand)"
		"[root] module.documentdb.var.vpc_id (expand)" -> "[root] module.vpc_module.output.vpc_id (expand)"
		"[root] module.ecr (close)" -> "[root] module.ecr.aws_ecrpublic_repository_policy.policies (expand)"
		"[root] module.ecr (close)" -> "[root] module.ecr.var.team (expand)"
		"[root] module.ecr (expand)" -> "[root] module.codecommit (close)"
		"[root] module.ecr.aws_ecrpublic_repository.repositories (expand)" -> "[root] module.ecr.var.repository_names (expand)"
		"[root] module.ecr.aws_ecrpublic_repository_policy.policies (expand)" -> "[root] module.ecr.aws_ecrpublic_repository.repositories (expand)"
		"[root] module.ecr.aws_ecrpublic_repository_policy.policies (expand)" -> "[root] module.ecr.var.ecr_policy (expand)"
		"[root] module.ecr.var.ecr_policy (expand)" -> "[root] module.ecr (expand)"
		"[root] module.ecr.var.ecr_policy (expand)" -> "[root] module.iam.output.ecr_policy_arn (expand)"
		"[root] module.ecr.var.repository_names (expand)" -> "[root] module.ecr (expand)"
		"[root] module.ecr.var.team (expand)" -> "[root] module.ecr (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.aws_eks_access_entry.codebuild_access (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.aws_eks_access_entry.eks_access (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.aws_eks_access_policy_association.codebuild_admin_access (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.aws_eks_access_policy_association.codebuild_cluster_association (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.aws_eks_access_policy_association.eks_admin_association (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.aws_eks_access_policy_association.eks_cluster_association (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.null_resource.private_tagging_additions (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.null_resource.public_tagging_additions (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.null_resource.setup_alb (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.output.cluster_name (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.output.cluster_sg (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.output.node_group_id (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.output.node_group_name (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.output.node_group_resources (expand)"
		"[root] module.eks_module (close)" -> "[root] module.eks_module.var.vpc_id (expand)"
		"[root] module.eks_module.aws_eks_access_entry.codebuild_access (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_access_entry.codebuild_access (expand)" -> "[root] module.eks_module.var.codebuild_principal (expand)"
		"[root] module.eks_module.aws_eks_access_entry.eks_access (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_access_entry.eks_access (expand)" -> "[root] module.eks_module.var.student_principal (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_admin_access (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_admin_access (expand)" -> "[root] module.eks_module.var.codebuild_principal (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_admin_access (expand)" -> "[root] module.eks_module.var.eks_admin_user_policy (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_cluster_association (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_cluster_association (expand)" -> "[root] module.eks_module.var.codebuild_principal (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.codebuild_cluster_association (expand)" -> "[root] module.eks_module.var.eks_cluster_user_policy (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.eks_admin_association (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.eks_admin_association (expand)" -> "[root] module.eks_module.var.eks_admin_user_policy (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.eks_admin_association (expand)" -> "[root] module.eks_module.var.student_principal (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.eks_cluster_association (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.eks_cluster_association (expand)" -> "[root] module.eks_module.var.eks_cluster_user_policy (expand)"
		"[root] module.eks_module.aws_eks_access_policy_association.eks_cluster_association (expand)" -> "[root] module.eks_module.var.student_principal (expand)"
		"[root] module.eks_module.aws_eks_addon.cni_addon (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_addon.cni_addon (expand)" -> "[root] module.eks_module.var.cni_version (expand)"
		"[root] module.eks_module.aws_eks_addon.coredns_addon (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_addon.coredns_addon (expand)" -> "[root] module.eks_module.var.coredns_version (expand)"
		"[root] module.eks_module.aws_eks_addon.kubeproxy_addon (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_addon.kubeproxy_addon (expand)" -> "[root] module.eks_module.var.kubeproxy_version (expand)"
		"[root] module.eks_module.aws_eks_addon.observability_addon (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_addon.observability_addon (expand)" -> "[root] module.eks_module.var.observability_version (expand)"
		"[root] module.eks_module.aws_eks_addon.podidentity_addon (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_addon.podidentity_addon (expand)" -> "[root] module.eks_module.var.podidentity_version (expand)"
		"[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)" -> "[root] module.eks_module.var.cluster_auth_mode (expand)"
		"[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)" -> "[root] module.eks_module.var.cluster_name (expand)"
		"[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)" -> "[root] module.eks_module.var.cluster_role (expand)"
		"[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)" -> "[root] module.eks_module.var.cluster_subnet_ids (expand)"
		"[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)" -> "[root] module.eks_module.var.team (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.desired_nodes (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.max_nodes (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.min_nodes (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.node_disk_size (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.node_instance_pricing (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.node_instance_types (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.node_subnet_ids (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.nodegroup_name (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.nodegroup_role (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.nodes_ssh_key (expand)"
		"[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)" -> "[root] module.eks_module.var.unavailable_nodes (expand)"
		"[root] module.eks_module.null_resource.private_tagging_additions (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.null_resource.private_tagging_additions (expand)" -> "[root] module.eks_module.var.cluster_private (expand)"
		"[root] module.eks_module.null_resource.private_tagging_additions (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.eks_module.null_resource.public_tagging_additions (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.null_resource.public_tagging_additions (expand)" -> "[root] module.eks_module.var.cluster_public (expand)"
		"[root] module.eks_module.null_resource.public_tagging_additions (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.aws_eks_addon.cni_addon (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.aws_eks_addon.coredns_addon (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.aws_eks_addon.kubeproxy_addon (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.aws_eks_addon.observability_addon (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.aws_eks_addon.podidentity_addon (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.var.alb_policy (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.var.alb_setup_script (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] module.eks_module.var.aws_region (expand)"
		"[root] module.eks_module.null_resource.setup_alb (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.eks_module.output.cluster_name (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.output.cluster_sg (expand)" -> "[root] module.eks_module.aws_eks_cluster.project3-cluster (expand)"
		"[root] module.eks_module.output.node_group_id (expand)" -> "[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)"
		"[root] module.eks_module.output.node_group_name (expand)" -> "[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)"
		"[root] module.eks_module.output.node_group_resources (expand)" -> "[root] module.eks_module.aws_eks_node_group.team-cuttlefish-nodegroup (expand)"
		"[root] module.eks_module.var.alb_policy (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.alb_policy (expand)" -> "[root] module.iam.output.alb_policy_arn (expand)"
		"[root] module.eks_module.var.alb_setup_script (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.aws_region (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.cluster_auth_mode (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.cluster_name (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.cluster_private (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.cluster_private (expand)" -> "[root] module.vpc_module.output.private_subnet_ids (expand)"
		"[root] module.eks_module.var.cluster_public (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.cluster_public (expand)" -> "[root] module.vpc_module.output.public_subnet_ids (expand)"
		"[root] module.eks_module.var.cluster_role (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.cluster_role (expand)" -> "[root] module.iam.output.eks_cluster_role_arn (expand)"
		"[root] module.eks_module.var.cluster_subnet_ids (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.cluster_subnet_ids (expand)" -> "[root] module.vpc_module.output.private_subnet_ids (expand)"
		"[root] module.eks_module.var.cluster_subnet_ids (expand)" -> "[root] module.vpc_module.output.public_subnet_ids (expand)"
		"[root] module.eks_module.var.cni_version (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.codebuild_principal (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.codebuild_principal (expand)" -> "[root] module.iam.output.codebuild_role_arn (expand)"
		"[root] module.eks_module.var.coredns_version (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.desired_nodes (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.eks_admin_user_policy (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.eks_cluster_user_policy (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.kubeproxy_version (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.max_nodes (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.min_nodes (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.node_disk_size (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.node_instance_pricing (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.node_instance_types (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.node_subnet_ids (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.node_subnet_ids (expand)" -> "[root] module.vpc_module.output.public_subnet_ids (expand)"
		"[root] module.eks_module.var.nodegroup_name (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.nodegroup_role (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.nodegroup_role (expand)" -> "[root] module.iam.output.eks_nodegroup_role_arn (expand)"
		"[root] module.eks_module.var.nodes_ssh_key (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.observability_version (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.podidentity_version (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.student_principal (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.team (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.unavailable_nodes (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.eks_module.var.vpc_id (expand)" -> "[root] module.eks_module (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.cloudwatch_agent_server_policy (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.codebuild_policy_attach (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.codepipeline_policy_attach (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.cognito_policy_attach (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.ec2_container_registry_read_only (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.eks_cluster_attachment (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.eks_cni_policy (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.eks_worker_node_policy (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.route53_policy_attach (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_role_policy_attachment.s3_policy_attach (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_user_policy.codecommit_policy (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.aws_iam_user_ssh_key.codecommit_ssh_key (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.alb_policy_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.codebuild_role_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.codecommit_user_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.codepipeline_role_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.cognito_role_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.ecr_policy_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.eks_cluster_role_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.eks_nodegroup_role_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.route53_role_arn (expand)"
		"[root] module.iam (close)" -> "[root] module.iam.output.s3_role_arn (expand)"
		"[root] module.iam.aws_iam_policy.alb_policy (expand)" -> "[root] module.iam.var.alb_policy_name (expand)"
		"[root] module.iam.aws_iam_policy.alb_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_policy.codebuild_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_policy.codebuild_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_policy.codepipeline_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_policy.codepipeline_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_policy.cognito_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_policy.cognito_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_policy.eks_cluster_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_policy.eks_cluster_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_policy.route53_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_policy.route53_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_policy.s3_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_policy.s3_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_policy.team_cuttlefish_ecr_policy (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_policy.team_cuttlefish_ecr_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.codebuild_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_role.codebuild_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.codepipeline_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_role.codepipeline_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.cognito_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_role.cognito_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.eks_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_role.eks_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.route53_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_role.route53_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role.s3_role (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_role.s3_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_role_policy_attachment.cloudwatch_agent_server_policy (expand)" -> "[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.codebuild_policy_attach (expand)" -> "[root] module.iam.aws_iam_policy.codebuild_policy (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.codebuild_policy_attach (expand)" -> "[root] module.iam.aws_iam_role.codebuild_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.codepipeline_policy_attach (expand)" -> "[root] module.iam.aws_iam_policy.codepipeline_policy (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.codepipeline_policy_attach (expand)" -> "[root] module.iam.aws_iam_role.codepipeline_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.cognito_policy_attach (expand)" -> "[root] module.iam.aws_iam_policy.cognito_policy (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.cognito_policy_attach (expand)" -> "[root] module.iam.aws_iam_role.cognito_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.ec2_container_registry_read_only (expand)" -> "[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.eks_cluster_attachment (expand)" -> "[root] module.iam.aws_iam_policy.eks_cluster_policy (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.eks_cluster_attachment (expand)" -> "[root] module.iam.aws_iam_role.eks_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.eks_cni_policy (expand)" -> "[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.eks_worker_node_policy (expand)" -> "[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.route53_policy_attach (expand)" -> "[root] module.iam.aws_iam_policy.route53_policy (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.route53_policy_attach (expand)" -> "[root] module.iam.aws_iam_role.route53_role (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.s3_policy_attach (expand)" -> "[root] module.iam.aws_iam_policy.s3_policy (expand)"
		"[root] module.iam.aws_iam_role_policy_attachment.s3_policy_attach (expand)" -> "[root] module.iam.aws_iam_role.s3_role (expand)"
		"[root] module.iam.aws_iam_user.codecommit_user (expand)" -> "[root] module.iam (expand)"
		"[root] module.iam.aws_iam_user.codecommit_user (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.iam.aws_iam_user_policy.codecommit_policy (expand)" -> "[root] module.iam.aws_iam_user.codecommit_user (expand)"
		"[root] module.iam.aws_iam_user_ssh_key.codecommit_ssh_key (expand)" -> "[root] module.iam.aws_iam_user.codecommit_user (expand)"
		"[root] module.iam.output.alb_policy_arn (expand)" -> "[root] module.iam.aws_iam_policy.alb_policy (expand)"
		"[root] module.iam.output.codebuild_role_arn (expand)" -> "[root] module.iam.aws_iam_role.codebuild_role (expand)"
		"[root] module.iam.output.codecommit_user_arn (expand)" -> "[root] module.iam.aws_iam_user.codecommit_user (expand)"
		"[root] module.iam.output.codepipeline_role_arn (expand)" -> "[root] module.iam.aws_iam_role.codepipeline_role (expand)"
		"[root] module.iam.output.cognito_role_arn (expand)" -> "[root] module.iam.aws_iam_role.cognito_role (expand)"
		"[root] module.iam.output.ecr_policy_arn (expand)" -> "[root] module.iam.aws_iam_policy.team_cuttlefish_ecr_policy (expand)"
		"[root] module.iam.output.eks_cluster_role_arn (expand)" -> "[root] module.iam.aws_iam_role.eks_role (expand)"
		"[root] module.iam.output.eks_nodegroup_role_arn (expand)" -> "[root] module.iam.aws_iam_role.eks_nodegroup_role (expand)"
		"[root] module.iam.output.route53_role_arn (expand)" -> "[root] module.iam.aws_iam_role.route53_role (expand)"
		"[root] module.iam.output.s3_role_arn (expand)" -> "[root] module.iam.aws_iam_role.s3_role (expand)"
		"[root] module.iam.var.alb_policy_name (expand)" -> "[root] module.iam (expand)"
		"[root] module.s3_static_website (close)" -> "[root] module.s3_static_website.aws_s3_bucket_policy.static_site_policy (expand)"
		"[root] module.s3_static_website (close)" -> "[root] module.s3_static_website.output.bucket_name (expand)"
		"[root] module.s3_static_website (close)" -> "[root] module.s3_static_website.output.bucket_website_endpoint (expand)"
		"[root] module.s3_static_website.aws_s3_bucket.static_site (expand)" -> "[root] module.s3_static_website.var.bucket_name (expand)"
		"[root] module.s3_static_website.aws_s3_bucket.static_site (expand)" -> "[root] module.s3_static_website.var.error_document (expand)"
		"[root] module.s3_static_website.aws_s3_bucket.static_site (expand)" -> "[root] module.s3_static_website.var.index_document (expand)"
		"[root] module.s3_static_website.aws_s3_bucket.static_site (expand)" -> "[root] module.s3_static_website.var.tags (expand)"
		"[root] module.s3_static_website.aws_s3_bucket.static_site (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.s3_static_website.aws_s3_bucket_policy.static_site_policy (expand)" -> "[root] module.s3_static_website.aws_s3_bucket.static_site (expand)"
		"[root] module.s3_static_website.aws_s3_bucket_policy.static_site_policy (expand)" -> "[root] module.s3_static_website.data.aws_prefix_list.cloudfront_origin_facing (expand)"
		"[root] module.s3_static_website.aws_s3_bucket_policy.static_site_policy (expand)" -> "[root] module.s3_static_website.var.cloudfront_origin_access_identity_arn (expand)"
		"[root] module.s3_static_website.aws_s3_bucket_policy.static_site_policy (expand)" -> "[root] module.s3_static_website.var.codebuild_role (expand)"
		"[root] module.s3_static_website.data.aws_prefix_list.cloudfront_origin_facing (expand)" -> "[root] module.s3_static_website.var.cloudfront_prefix_list (expand)"
		"[root] module.s3_static_website.data.aws_prefix_list.cloudfront_origin_facing (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.s3_static_website.output.bucket_name (expand)" -> "[root] module.s3_static_website.aws_s3_bucket.static_site (expand)"
		"[root] module.s3_static_website.output.bucket_website_endpoint (expand)" -> "[root] module.s3_static_website.aws_s3_bucket.static_site (expand)"
		"[root] module.s3_static_website.var.bucket_name (expand)" -> "[root] module.s3_static_website (expand)"
		"[root] module.s3_static_website.var.bucket_name (expand)" -> "[root] var.s3_bucket_name"
		"[root] module.s3_static_website.var.cloudfront_origin_access_identity_arn (expand)" -> "[root] module.cloudfront.output.origin_access_identity_arn (expand)"
		"[root] module.s3_static_website.var.cloudfront_origin_access_identity_arn (expand)" -> "[root] module.s3_static_website (expand)"
		"[root] module.s3_static_website.var.cloudfront_prefix_list (expand)" -> "[root] module.s3_static_website (expand)"
		"[root] module.s3_static_website.var.codebuild_role (expand)" -> "[root] module.iam.output.codebuild_role_arn (expand)"
		"[root] module.s3_static_website.var.codebuild_role (expand)" -> "[root] module.s3_static_website (expand)"
		"[root] module.s3_static_website.var.error_document (expand)" -> "[root] module.s3_static_website (expand)"
		"[root] module.s3_static_website.var.index_document (expand)" -> "[root] module.s3_static_website (expand)"
		"[root] module.s3_static_website.var.tags (expand)" -> "[root] module.s3_static_website (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.aws_route_table_association.private1_association (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.aws_route_table_association.private2_association (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.aws_route_table_association.private3_association (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.aws_route_table_association.public1_association (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.aws_route_table_association.public2_association (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.data.aws_region.current (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.output.private_route_table (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.output.private_subnet_ids (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.output.public_route_table (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.output.public_subnet_ids (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.output.vpc_id (expand)"
		"[root] module.vpc_module (close)" -> "[root] module.vpc_module.var.aws_region (expand)"
		"[root] module.vpc_module.aws_eip.nat_gateway_eip (expand)" -> "[root] module.vpc_module.var.eip_name (expand)"
		"[root] module.vpc_module.aws_eip.nat_gateway_eip (expand)" -> "[root] module.vpc_module.var.team (expand)"
		"[root] module.vpc_module.aws_eip.nat_gateway_eip (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc_module.aws_internet_gateway.team-cuttlefish_igw (expand)" -> "[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)"
		"[root] module.vpc_module.aws_internet_gateway.team-cuttlefish_igw (expand)" -> "[root] module.vpc_module.var.igw_name (expand)"
		"[root] module.vpc_module.aws_nat_gateway.team-cuttle_nat (expand)" -> "[root] module.vpc_module.aws_eip.nat_gateway_eip (expand)"
		"[root] module.vpc_module.aws_nat_gateway.team-cuttle_nat (expand)" -> "[root] module.vpc_module.aws_subnet.public_subnets (expand)"
		"[root] module.vpc_module.aws_nat_gateway.team-cuttle_nat (expand)" -> "[root] module.vpc_module.var.nat_name (expand)"
		"[root] module.vpc_module.aws_route_table.private_route_table (expand)" -> "[root] module.vpc_module.aws_nat_gateway.team-cuttle_nat (expand)"
		"[root] module.vpc_module.aws_route_table.private_route_table (expand)" -> "[root] module.vpc_module.var.private_rt_name (expand)"
		"[root] module.vpc_module.aws_route_table.public_route_table (expand)" -> "[root] module.vpc_module.aws_internet_gateway.team-cuttlefish_igw (expand)"
		"[root] module.vpc_module.aws_route_table.public_route_table (expand)" -> "[root] module.vpc_module.var.public_rt_name (expand)"
		"[root] module.vpc_module.aws_route_table_association.private1_association (expand)" -> "[root] module.vpc_module.aws_route_table.private_route_table (expand)"
		"[root] module.vpc_module.aws_route_table_association.private1_association (expand)" -> "[root] module.vpc_module.aws_subnet.private_subnets (expand)"
		"[root] module.vpc_module.aws_route_table_association.private2_association (expand)" -> "[root] module.vpc_module.aws_route_table.private_route_table (expand)"
		"[root] module.vpc_module.aws_route_table_association.private2_association (expand)" -> "[root] module.vpc_module.aws_subnet.private_subnets (expand)"
		"[root] module.vpc_module.aws_route_table_association.private3_association (expand)" -> "[root] module.vpc_module.aws_route_table.private_route_table (expand)"
		"[root] module.vpc_module.aws_route_table_association.private3_association (expand)" -> "[root] module.vpc_module.aws_subnet.private_subnets (expand)"
		"[root] module.vpc_module.aws_route_table_association.public1_association (expand)" -> "[root] module.vpc_module.aws_route_table.public_route_table (expand)"
		"[root] module.vpc_module.aws_route_table_association.public1_association (expand)" -> "[root] module.vpc_module.aws_subnet.public_subnets (expand)"
		"[root] module.vpc_module.aws_route_table_association.public2_association (expand)" -> "[root] module.vpc_module.aws_route_table.public_route_table (expand)"
		"[root] module.vpc_module.aws_route_table_association.public2_association (expand)" -> "[root] module.vpc_module.aws_subnet.public_subnets (expand)"
		"[root] module.vpc_module.aws_subnet.private_subnets (expand)" -> "[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)"
		"[root] module.vpc_module.aws_subnet.private_subnets (expand)" -> "[root] module.vpc_module.data.aws_availability_zones.available (expand)"
		"[root] module.vpc_module.aws_subnet.private_subnets (expand)" -> "[root] module.vpc_module.var.private_subnets (expand)"
		"[root] module.vpc_module.aws_subnet.public_subnets (expand)" -> "[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)"
		"[root] module.vpc_module.aws_subnet.public_subnets (expand)" -> "[root] module.vpc_module.data.aws_availability_zones.available (expand)"
		"[root] module.vpc_module.aws_subnet.public_subnets (expand)" -> "[root] module.vpc_module.var.public_subnets (expand)"
		"[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)" -> "[root] module.vpc_module.var.team (expand)"
		"[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)" -> "[root] module.vpc_module.var.vpc_cidr (expand)"
		"[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)" -> "[root] module.vpc_module.var.vpc_name (expand)"
		"[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc_module.data.aws_availability_zones.available (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc_module.data.aws_region.current (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc_module.output.private_route_table (expand)" -> "[root] module.vpc_module.aws_route_table.private_route_table (expand)"
		"[root] module.vpc_module.output.private_subnet_ids (expand)" -> "[root] module.vpc_module.aws_subnet.private_subnets (expand)"
		"[root] module.vpc_module.output.public_route_table (expand)" -> "[root] module.vpc_module.aws_route_table.public_route_table (expand)"
		"[root] module.vpc_module.output.public_subnet_ids (expand)" -> "[root] module.vpc_module.aws_subnet.public_subnets (expand)"
		"[root] module.vpc_module.output.vpc_id (expand)" -> "[root] module.vpc_module.aws_vpc.team-cuttlefish_vpc (expand)"
		"[root] module.vpc_module.var.aws_region (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.eip_name (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.igw_name (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.nat_name (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.private_rt_name (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.private_subnets (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.public_rt_name (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.public_subnets (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.team (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.vpc_cidr (expand)" -> "[root] module.vpc_module (expand)"
		"[root] module.vpc_module.var.vpc_name (expand)" -> "[root] module.vpc_module (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudfront.aws_route53_record.hosted_zone_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_dashboard.team_cuttlefish_dashboard (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_4xx_error_rate_cloudfront (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_5xx_error_rate_cloudfront (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_cpu_utilization (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_database_connections_docdb (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_error_rate_5xx (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_memory_utilization (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.high_sign_in_failures_cognito (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.low_freeable_memory_docdb (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_cloudwatch_metric_alarm.s3_bucket_size (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.cloudwatch.aws_sns_topic_subscription.team_subscription (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3_static_website.aws_s3_bucket_policy.static_site_policy (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc_module.aws_route_table_association.private1_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc_module.aws_route_table_association.private2_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc_module.aws_route_table_association.private3_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc_module.aws_route_table_association.public1_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc_module.aws_route_table_association.public2_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc_module.data.aws_region.current (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.eks_module.null_resource.private_tagging_additions (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.eks_module.null_resource.public_tagging_additions (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.eks_module.null_resource.setup_alb (expand)"
		"[root] root" -> "[root] module.cloudfront (close)"
		"[root] root" -> "[root] module.cloudwatch (close)"
		"[root] root" -> "[root] module.s3_static_website (close)"
		"[root] root" -> "[root] module.vpc_module (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)"
	}
}
