package com.skillstorm.investments.models;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Positive;
import javax.validation.constraints.Size;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

@Document(collection = "investments")
public class Investment {

    // ID auto-generated by MongoDB/DocumentDB
    @Id
    private String id;

    // user email
    @NotBlank(message = "Email is required")
    @Email(message = "Invalid email format")
    private String email;

    // stock name
    @NotBlank(message = "Stock name is required")
    private String stockName;
    
    // stock abbreviation
    @NotBlank(message = "Stock symbol is required")
    @Size(min = 1, max = 10, message = "Symbol must have between 1 and 10 characters")
    private String symbol;

    // amount of shares owned by the user
    @Positive(message = "Shares must be a positive number")
    private int shares;

    // amount initially paid by the user - used to track overall change
    @Positive(message = "Purchase price must be a positive number")
    private double purchasePrice;

    // default constructor
    public Investment() {
    }

    // full constructor
    public Investment(String id, String email, String stockName, String symbol, int shares, double purchasePrice) {
        this.id = id;
        this.email = email;
        this.stockName = stockName;
        this.symbol = symbol;
        this.shares = shares;
        this.purchasePrice = purchasePrice;
    }

    // no id constructor
    public Investment(String email, String stockName, String symbol, int shares, double purchasePrice) {
        this.email = email;
        this.stockName = stockName;
        this.symbol = symbol;
        this.shares = shares;
        this.purchasePrice = purchasePrice;
    }

    // Getters and Setters
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getStockName() {
        return stockName;
    }

    public void setStockName(String stockName) {
        this.stockName = stockName;
    }

    public String getSymbol() {
        return symbol;
    }

    public void setSymbol(String symbol) {
        this.symbol = symbol;
    }

    public int getShares() {
        return shares;
    }

    public void setShares(int shares) {
        this.shares = shares;
    }

    public double getPurchasePrice() {
        return purchasePrice;
    }

    public void setPurchasePrice(double purchasePrice) {
        this.purchasePrice = purchasePrice;
    }

    // Hashcode and Equals
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((email == null) ? 0 : email.hashCode());
        result = prime * result + ((stockName == null) ? 0 : stockName.hashCode());
        result = prime * result + ((symbol == null) ? 0 : symbol.hashCode());
        result = prime * result + shares;
        long temp;
        temp = Double.doubleToLongBits(purchasePrice);
        result = prime * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Investment other = (Investment) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        } else if (!id.equals(other.id))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        } else if (!email.equals(other.email))
            return false;
        if (stockName == null) {
            if (other.stockName != null)
                return false;
        } else if (!stockName.equals(other.stockName))
            return false;
        if (symbol == null) {
            if (other.symbol != null)
                return false;
        } else if (!symbol.equals(other.symbol))
            return false;
        if (shares != other.shares)
            return false;
        if (Double.doubleToLongBits(purchasePrice) != Double.doubleToLongBits(other.purchasePrice))
            return false;
        return true;
    }

    // toString
    @Override
    public String toString() {
        return "Investment [id=" + id + ", email=" + email + ", stockName=" + stockName + ", symbol=" + symbol
                + ", shares=" + shares + ", purchasePrice=" + purchasePrice + "]";
    }
    
}
